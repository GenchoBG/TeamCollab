@model IEnumerable<BoardViewModel>
@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" href="~/css/kanban.css" />

<div class="input-group mb-3">
    <input id="boardName" type="text" class="form-control" placeholder="Add board" aria-label="Recipient's username" aria-describedby="basic-addon2">
    <div class="input-group-append">
        <button id="boardNameBtn" class="btn" onclick="addBoard()">Append</button>
        <a class="btn btn-warning" href="/Kanban/Archived/@ViewData["projectId"]">Archived</a>
    </div>
</div>

<div id="kaban">
    <div id="boards">

        <div class="board" id="bin">
            <header style="display: inline">Recycle bin</header>
            <button id="empty" class="btn btn-danger btn-block">Archive</button>
            <div class="cards" id="recyclebin"></div>
        </div>

        @foreach (var board in Model)
        {
            <div class="board" id="board-@board.Id">
                <div class="row">
                    <div class="col-10">
                        <header style="display: inline">@board.Name</header>
                    </div>
                    <div class="col" id="x-@board.Id" onclick="deleteBoard(@board.Id)" style="font-size: 20pt;">&times;</div>
                </div>
                <div class="input-group mb-3">
                    <input id="cardName-@board.Id" type="text" class="form-control" placeholder="Add card" aria-label="Recipient's username" aria-describedby="basic-addon2">
                    <div class="input-group-append">
                        <button id="btn-@board.Id" class="btn" onclick="addCard(@board.Id)">Create</button>
                    </div>
                </div>
                <div class="cards">
                    @foreach (var card in board.Cards)
                    {
                        <div class="card" id="card-@card.Id">
                            <span class="cardtitle">@card.Content</span>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<div id="projectId" style="display: none">@ViewData["projectId"]</div>


@section Scripts{
    <script src='https://cdnjs.cloudflare.com/ajax/libs/dragula/3.6.3/dragula.min.js'></script>

    <script type="text/javascript">
        var l1 = document.querySelector('#b1');
        var l2 = document.querySelector('#b2');
        var l3 = document.querySelector('#b3');

        console.log([l1, l2, l3]);
        console.log($("div.cards").toArray());


        var drake = dragula($("div.cards").toArray());
        // Scrollable area
        var element = document.getElementById("boards"); // Count Boards
        var numberOfBoards = element.getElementsByClassName('board').length;
        var boardsWidth = numberOfBoards * 316; // Width of all Boards
        element.style.width = boardsWidth + "px"; // set Width

        // disable text-selection
        function disableselect(e) { return false; }

        // will implement a workaround later

        //$(".cards").onselectstart = new Function();
        //$(".cards").onmousedown = disableselect;

        drake.on('drop',
            function(el, target, source, sibling) {
                if ($(target).parent().attr("id") === "bin") {
                    return;
                }

                var listChildren = $(target).children();

                console.log(listChildren);
                var indexBefore = jQuery.inArray(el, listChildren) - 1;

                console.log("element: " + el.id.replace("card-", ""));

                var prevId = indexBefore < 0 ? null : listChildren[indexBefore].id.replace("card-", "");
                var nextId = sibling ? sibling.id.replace("card-", "") : null;

                console.log("prev: " + prevId);
                console.log("next: " + nextId);
                console.log("boardId: " + $(target).parent().attr("id").replace("board-", ""));

                moveCard(el.id.replace("card-", ""),
                    $(target).parent().attr("id").replace("board-", ""),
                    prevId,
                    nextId);
            });

        function moveCard(cardId, boardId, prevId, nextId) {
            $.ajax({
                method: "GET",
                url: `/Kanban/MoveCard?cardId=${cardId}&boardId=${boardId}&prevCardId=${prevId}&nextCardId=${nextId}`,
                success: function() {
                },
                error: function(err) {
                    console.log(err);
                }
            });
        }

        function addBoard() {
            $.ajax({
                method: "GET",
                url: `/Kanban/AddBoard?projectId=${$("#projectId").text()}&name=${$("#boardName").val()}`,
                success: function(board) {
                    location.reload();
                },
                error: function(err) {
                    console.log(err);
                }
            });
        }

        function addCard(id) {
            $.ajax({
                method: "GET",
                url: `/Kanban/AddCard?boardId=${id}&text=${$(`#cardName-${id}`).val()}&projectId=${$("#projectId").text()}`,
                success: function(board) {
                    location.reload();
                },
                error: function(err) {
                    console.log(err);
                }
            });
        }

        $("div.board div input").on("keypress",
            function(event) {

                if (event.which === 13) {
                    if (!event.shiftKey) {
                        $(event.target).parent().find("button").click();

                    }
                    event.preventDefault();
                }
            });

        $("#boardName").on("keypress",
            function(event) {
                if (event.which === 13) {
                    if (!event.shiftKey) {
                        $("#boardNameBtn").click();
                    }
                    event.preventDefault();
                }
            });

        function deleteBoard(boardId) {
            $.ajax({
                method: "GET",
                url: `/Kanban/DeleteBoard?boardId=${boardId}`,
                success: function() {
                    location.reload();
                },
                error: function(err) {
                    console.log(err);
                }
            });
        }

        $("#empty").on("click",
            function () {
                let cards = $("#recyclebin").children().toArray();

                if (cards.length == 0) {
                    return;
                }

                console.log(cards);

                let index = 0;

                function recursiveForLoop() {
                    $.ajax({
                        method: "GET",
                        url: `/Kanban/ArchiveCard?cardId=${$(cards[index]).attr("id").replace("card-", "")}`,
                        success: function () {
                            console.log(cards[index] + " archived!");
                            index++;
                            if (index < cards.length) {
                                recursiveForLoop();
                            }
                        },
                        error: function(err) {
                            console.log(err);
                        }
                    });
                }

                recursiveForLoop();

                $("#recyclebin").empty();
            });

    </script>
}